name: "vggRigidPoseNet"
layer {
  name: "data"
  type: "WindowPoseData"
  top: "data"
  top: "label"
  top: "e1"
  top: "e2"
  top: "e3"
  top: "e1coarse"
  top: "e2coarse"
  top: "e3coarse"
  window_data_param {
    source: "/data1/shubhtuls/code/ViewpointsAndKeypoints/cachedir/rcnnFinetuneVps/binnedJoint/Train.txt"
    batch_size: 20
    fg_threshold: 0.5
    bg_threshold: 0.5
    fg_fraction: 1.0
    context_pad: 16
    crop_mode: "warp"
    }
  transform_param {
        mirror: true
        crop_size: 224
  }
  include { phase: TRAIN }
}
layer {
  name: "data"
  type: "WindowPoseData"
  top: "data"
  top: "label"
  top: "e1"
  top: "e2"
  top: "e3"
  top: "e1coarse"
  top: "e2coarse"
  top: "e3coarse"
  window_data_param {
    source: "/data1/shubhtuls/code/ViewpointsAndKeypoints/cachedir/rcnnFinetuneVps/binnedJoint/Val.txt"
    batch_size: 20
    fg_threshold: 0.5
    bg_threshold: 0.5
    fg_fraction: 1.0
    context_pad: 16
    crop_mode: "warp"
  }
  transform_param {
        mirror: false
        crop_size: 224
  }
  include { phase: TEST }
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_e1"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e1"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 441
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc8_e2"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e2"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 441
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc8_e3"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e3"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 441
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc8_e1coarse"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e1coarse"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 147
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc8_e2coarse"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e2coarse"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 147
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc8_e3coarse"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_e3coarse"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 147
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pred_e1"
  type: "MaskOutputs"
  bottom: "fc8_e1"
  bottom: "label"
  top: "pred_e1"
  mask_outputs_param {
    kernel_size: 21
  }
}
layer {
  name: "pred_e2"
  type: "MaskOutputs"
  bottom: "fc8_e2"
  bottom: "label"
  top: "pred_e2"
  mask_outputs_param {
    kernel_size: 21
  }
}
layer {
  name: "pred_e3"
  type: "MaskOutputs"
  bottom: "fc8_e3"
  bottom: "label"
  top: "pred_e3"
  mask_outputs_param {
    kernel_size: 21
  }
}
layer {
  name: "pred_e1coarse"
  type: "MaskOutputs"
  bottom: "fc8_e1coarse"
  bottom: "label"
  top: "pred_e1coarse"
  mask_outputs_param {
    kernel_size: 7
  }
}
layer {
  name: "pred_e2coarse"
  type: "MaskOutputs"
  bottom: "fc8_e2coarse"
  bottom: "label"
  top: "pred_e2coarse"
  mask_outputs_param {
    kernel_size: 7
  }
}
layer {
  name: "pred_e3coarse"
  type: "MaskOutputs"
  bottom: "fc8_e3coarse"
  bottom: "label"
  top: "pred_e3coarse"
  mask_outputs_param {
    kernel_size: 7
  }
}
layer {
  name: "loss1"
  type: "SoftmaxWithLoss"
  bottom: "pred_e1"
  bottom: "e1"
}
layer {
  name: "loss2"
  type: "SoftmaxWithLoss"
  bottom: "pred_e2"
  bottom: "e2"
}
layer {
  name: "loss3"
  type: "SoftmaxWithLoss"
  bottom: "pred_e3"
  bottom: "e3"
}
layer {
  name: "loss1c"
  type: "SoftmaxWithLoss"
  bottom: "pred_e1coarse"
  bottom: "e1coarse"
}
layer {
  name: "loss2c"
  type: "SoftmaxWithLoss"
  bottom: "pred_e2coarse"
  bottom: "e2coarse"
}
layer {
  name: "loss3c"
  type: "SoftmaxWithLoss"
  bottom: "pred_e3coarse"
  bottom: "e3coarse"
}
layer {
  name: "accuracy1"
  type: "Accuracy"
  bottom: "pred_e1"
  bottom: "e1"
  top: "accuracy1"
  include { phase: TEST }
}
layer {
  name: "accuracy2"
  type: "Accuracy"
  bottom: "pred_e2"
  bottom: "e2"
  top: "accuracy2"
  include { phase: TEST }
}
layer {
  name: "accuracy3"
  type: "Accuracy"
  bottom: "pred_e3"
  bottom: "e3"
  top: "accuracy3"
  include { phase: TEST }
}
layer {
  name: "accuracy1c"
  type: "Accuracy"
  bottom: "pred_e1coarse"
  bottom: "e1coarse"
  top: "accuracy1c"
  include { phase: TEST }
}
layer {
  name: "accuracy2c"
  type: "Accuracy"
  bottom: "pred_e2coarse"
  bottom: "e2coarse"
  top: "accuracy2c"
  include { phase: TEST }
}
layer {
  name: "accuracy3c"
  type: "Accuracy"
  bottom: "pred_e3coarse"
  bottom: "e3coarse"
  top: "accuracy3c"
  include { phase: TEST }
}
